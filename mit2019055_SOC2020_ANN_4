{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"mit2019055_SOC2020_ANN_4","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMa1/6HYNOTnztyeW/5MJD6"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"1cVsm8nBMHQB","colab_type":"code","colab":{}},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"H2Bpo2QXMPjn","colab_type":"code","colab":{}},"source":["input1 = np.array([0,0,1,1])\n","input2 = np.array([0,1,0,1])\n","x = np.vstack((input1, input2)).T\n","output = np.array([1,0,0,1])\n","y = np.random.rand(4,1)\n","w_h = np.random.rand(2,3)\n","w_o = np.random.rand(3,1)\n","b1 = np.random.rand(3,1)\n","bo = np.random.rand(1,1)\n","z1 = np.random.rand(3,1)\n","zo = np.random.rand(1,1)\n","a1 = np.random.rand(3,1)\n","ao = np.random.rand(1,1)\n","del_1  = np.zeros([3,1])\n","del_o = np.zeros([1,1])\n","Del_1 = np.zeros([3,1])\n","Del_o = np.zeros([1,1])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"BRsAh0ScQA-W","colab_type":"code","colab":{}},"source":["count = 0\n","lamda = 0.0\n","epoches = 5000\n","alpha = 0.05\n","# while(count != 4):\n","#   count = 0\n","errors = []\n","for j in range(epoches):\n","  error = 0\n","  for i in range(len(x)):\n","    #feedforward\n","    z1 = np.matmul(x[i:i+1], w_h).T + b1\n","    a1 = 1/(1 + np.exp(-z1))\n","    zo = np.matmul(a1.T, w_o).T + bo\n","    ao = 1/(1 + np.exp(-zo))\n","    #backpropagation\n","    del_o = ao - output[i:i+1]\n","    del_1 = np.matmul(w_o,del_o)*(a1*(1-a1))\n","    w_o -= alpha*(np.matmul(a1,del_o.T) + lamda*w_o)\n","    bo -= alpha*(del_o)\n","    w_h -= alpha*(np.matmul(x[i:i+1].T,del_1.T) + lamda*w_h)\n","    b1 -= alpha*(del_1)\n","    error += np.matmul(del_o.T, del_o)\n","  errors.append(error)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"IMxyOe5XQNrH","colab_type":"code","colab":{}},"source":[" for i in range(len(x)):\n","  z1 = np.matmul(x[i:i+1], w_h).T + b1\n","  a1 = 1/(1 + np.exp(-z1))\n","  zo = np.matmul(a1.T, w_o).T + bo\n","  y[i,0] = 1/(1 + np.exp(-zo))\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"BxMf6da3TK8U","colab_type":"code","outputId":"50906e58-f248-4b9d-bdbd-a68a908cd856","executionInfo":{"status":"ok","timestamp":1586886158516,"user_tz":-330,"elapsed":1059,"user":{"displayName":"MANI SANKAR JAVVAJI","photoUrl":"","userId":"16043652756489531386"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["print(y)"],"execution_count":22,"outputs":[{"output_type":"stream","text":["[[0.97621556]\n"," [0.01589825]\n"," [0.01586854]\n"," [0.98434352]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"JwORLnLgz8lv","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":269},"outputId":"8d2f9dd9-85d7-45f1-af76-56491d6ea1f2","executionInfo":{"status":"ok","timestamp":1586886160450,"user_tz":-330,"elapsed":1255,"user":{"displayName":"MANI SANKAR JAVVAJI","photoUrl":"","userId":"16043652756489531386"}}},"source":["plt.plot( range(epoches),np.array(errors).reshape(epoches,1))\n","plt.show()"],"execution_count":23,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"jIJTAf6jveN3","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}